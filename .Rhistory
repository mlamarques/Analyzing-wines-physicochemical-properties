color = "green",
shape = 8,
size = 4) +
xlab("Quality")
ggplot(aes(factor(quality),
free.sulfur.dioxide),
data = white) +
geom_jitter( alpha = .3, color = "orange")  +
geom_boxplot( alpha = .5,color = 'purple')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab("Quality")
ggplot(aes(factor(quality),
free.sulfur.dioxide),
data = white) +
geom_jitter( alpha = .3, color = "orange")  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab("Quality")
ggplot(aes(factor(quality),
free.sulfur.dioxide),
data = white) +
geom_jitter( alpha = .3, color = "orange")  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab("Quality") +
ylim(0,150)
ggplot(data=white, aes(x = scale, y = pH)) +
geom_boxplot() +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab("Quality")
ggplot(data=white, aes(x = scale, y = free.sulfur.dioxide)) +
geom_jitter( alpha = .3, color = "orange")  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab("Quality")
xlab("Free sulfur dioxide") +
ylim(150)
xlab("Free sulfur dioxide") +
ylim(0,150)
xlab("Free sulfur dioxide") +
ylim(0,150)
ggplot(data=white, aes(x = scale, y = free.sulfur.dioxide)) +
geom_jitter( alpha = .3, color = "orange")  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab("Quality")
xlab("Free sulfur dioxide") +
ylim(0,150)
ggplot(data=white, aes(x = scale, y = free.sulfur.dioxide)) +
geom_jitter( alpha = .3, color = "orange")  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
ylim(0,150) +
xlab("Quality") +
xlab("Free sulfur dioxide")
### Free sulfur dioxide x Quality:
```{r echo=FALSE, message=FALSE, warning=FALSE, freesulfurdioxide}
ggplot(aes(factor(quality),
free.sulfur.dioxide),
data = white) +
geom_jitter( alpha = .3, color = "orange")  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab("Quality") +
ylim(0,150)
ggplot(data=white, aes(x = scale, y = volatile.acidity)) +
geom_jitter( alpha = .3, color = "orange")  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
ylim(0,150) +
xlab("Quality") +
xlab("Free sulfur dioxide")
ggplot(data=white, aes(x = scale, y = volatile.acidity)) +
geom_jitter( alpha = .3, color = "orange")  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab("Quality") +
xlab("Free sulfur dioxide")
ggplot(data=white, aes(x = scale, y = chlorides)) +
geom_boxplot() +
xlab("Chlorides")
ggplot(data=white, aes(x = scale, y = volatile.acidity)) +
geom_jitter( alpha = .3, color = "orange")  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab("Quality") +
ggplot(data=white, aes(x = scale, y = volatile.acidity)) +
geom_jitter( alpha = .3, color = "orange")  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab("Quality") +
ggplot(data=white, aes(x = scale, y = volatile.acidity)) +
geom_jitter( alpha = .3, color = "orange")  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab("Quality")
ggplot(data=white, aes(x = scale, y = volatile.acidity)) +
geom_jitter( alpha = .3, color = "orange")  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab("Quality")
ggplot(data=white, aes(x = scale, y = chlorides)) +
geom_jitter( alpha = .3, color = "orange")  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab("Chlorides")
ggplot(data=white, aes(x = scale, y = chlorides)) +
geom_jitter( alpha = .3, color = "orange")  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab("Quality")
ggplot(aes(x = chlorides), data = white) +
geom_bar(fill = "#1ab385", binwidth = .001) +
geom_vline(xintercept = median(white$chlorides), color = "orange")
ggplot(aes(x = chlorides, y = residual.sugar), data = white) +
geom_point(position = 'jitter', color = "#46003d", alpha = 1/5) +
geom_smooth(method='lm', aes(group = 1), color = "cyan") +
xlab("Wine Quality") +
ylab("Alcohol")
ggplot(aes(x = chlorides, y = residual.sugar), data = white) +
geom_point(position = 'jitter', color = "#46003d", alpha = 1/5) +
geom_smooth(method='lm', aes(group = 1), color = "cyan") +
xlab("Chlorides") +
ylab("Residual Sugar") +
ggplot(aes(x = chlorides, y = residual.sugar), data = white) +
geom_point(position = 'jitter', color = "#46003d", alpha = 1/5) +
geom_smooth(method='lm', aes(group = 1), color = "cyan") +
xlab("Chlorides") +
ylab("Residual Sugar")
ggplot(aes(x = chlorides, y = residual.sugar), data = white) +
geom_point(position = 'jitter', color = "#46003d", alpha = 1/5) +
geom_smooth(method='lm', aes(group = 1), color = "cyan") +
xlab("Chlorides") +
ylab("Residual Sugar")
ggplot(aes(x = chlorides, y = residual.sugar), data = white) +
geom_point(position = 'jitter', color = "#46003d", alpha = 1/5) +
geom_smooth(method='lm', aes(group = 1), color = "cyan") +
xlab("Chlorides") +
ylab("Residual Sugar") +
ylim(0, 30)
ggplot(data=white, aes(x = scale, y = pH)) +
geom_jitter( alpha = .3, color = "orange")  +
geom_boxplot( alpha = .5,color = 'blue') +
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab("Quality")
ggplot(aes(x = volatile.acidity), data = white) +
geom_bar(fill = "#8989ff") +
geom_vline(xintercept = median(white$quality), color = "red")
ggplot(aes(x = volatile.acidity), data = white) +
geom_bar(fill = "#8989ff") +
geom_vline(xintercept = median(white$volatile.acidity), color = "red")
ggplot(aes(x = volatile.acidity), data = white) +
geom_bar(fill = "#8989ff", binwidth = .1) +
geom_vline(xintercept = median(white$volatile.acidity), color = "red")
ggplot(aes(x = volatile.acidity), data = white) +
geom_bar(fill = "#8989ff", binwidth = .01) +
geom_vline(xintercept = median(white$volatile.acidity), color = "red")
ggplot(aes(x = volatile.acidity), data = white) +
geom_bar(fill = "#8989ff", binwidth = .008) +
geom_vline(xintercept = median(white$volatile.acidity), color = "red")
ggplot(aes(x = volatile.acidity), data = white) +
geom_bar(fill = "#8989ff", binwidth = .005) +
geom_vline(xintercept = median(white$volatile.acidity), color = "red")
ggplot(aes(x = citric.acid), data = white) +
geom_bar(fill = "#8989ff") +
geom_vline(xintercept = median(white$citric.acid), color = "red")
ggplot(aes(x = residual.sugar), data = white) +
geom_bar(fill = "#8989ff") +
geom_vline(xintercept = median(white$residual.sugar), color = "red")
chlorides), co
ggplot(aes(x = chlorides), data = white) +
geom_bar(fill = "#8989ff") +
geom_vline(xintercept = median(white$chlorides), color = "red")
```{r echo=FALSE, hist_free.sulfur.dioxide}
ggplot(aes(x = free.sulfur.dioxide), data = white) +
geom_bar(fill = "#8989ff") +
geom_vline(xintercept = median(white$free.sulfur.dioxide), color = "red")
ggplot(aes(x = total.sulfur.dioxide), data = white) +
geom_bar(fill = "#8989ff") +
geom_vline(xintercept = median(white$total.sulfur.dioxide), color = "red")
ggplot(aes(x = density), data = white) +
geom_bar(fill = "#8989ff") +
geom_vline(xintercept = median(white$density), color = "red")
ggplot(aes(x = density), data = white) +
geom_bar(fill = "#8989ff") +
geom_vline(xintercept = median(white$density), color = "red") +
xlim(.87, 1)
ggplot(aes(x = density), data = white) +
geom_bar(fill = "#8989ff") +
geom_vline(xintercept = median(white$density), color = "red") +
xlim(.77, 1)
ggplot(aes(x = density), data = white) +
geom_bar(fill = "#8989ff") +
geom_vline(xintercept = median(white$density), color = "red") +
xlim(.97, 1)
ggplot(aes(x = density), data = white) +
geom_bar(fill = "#8989ff") +
geom_vline(xintercept = median(white$density), color = "red") +
xlim(.987, 1)
ggplot(aes(x = pH), data = white) +
geom_bar(fill = "#8989ff") +
geom_vline(xintercept = median(white$pH), color = "red")
ggplot(aes(x = sulphates), data = white) +
geom_bar(fill = "#8989ff") +
geom_vline(xintercept = median(white$sulphates), color = "red")
ggplot(aes(x = chlorides), data = white) +
geom_bar(fill = "#1ab385", binwidth = .001) +
geom_vline(xintercept = median(white$chlorides), color = "orange")
ggplot(aes(x = volatile.acidity), data = white) +
geom_bar(fill = "#1ab385", binwidth = .005) +
geom_vline(xintercept = median(white$volatile.acidity), color = "red")
ggplot(aes(x = volatile.acidity), data = white) +
geom_bar(fill = "#8989ff", binwidth = .005) +
geom_vline(xintercept = median(white$volatile.acidity), color = "red")
ggplot(aes(x = quality), data = white) +
geom_bar(fill = "#1ab385") +
geom_vline(xintercept = median(white$quality), color = "red")
ggplot(aes(x = quality), data = white) +
geom_bar(fill = "#8989ff") +
geom_vline(xintercept = median(white$quality), color = "red")
ggplot(aes(x = chlorides, y = pH), data = white) +
geom_point(position = 'jitter', color = "#46003d", alpha = 1/5) +
geom_smooth(method='lm', aes(group = 1), color = "cyan") +
xlab("Chlorides") +
ylab("pH")
ggplot(aes(x = pH, y = chlorides), data = white) +
geom_point(position = 'jitter', color = "#46003d", alpha = 1/5) +
geom_smooth(method='lm', aes(group = 1), color = "cyan") +
xlab("Chlorides") +
ylab("pH")
chlorides
ggplot(aes(x = chlorides, y = residual.sugar), data = white) +
geom_point(position = 'jitter', color = "#46003d", alpha = 1/5) +
geom_smooth(method='lm', aes(group = 1), color = "cyan") +
xlab("Chlorides") +
ylab("Residual Sugar") +
ylim(0, 30)
ggplot(aes(x = chlorides, y = pH), data = white) +
geom_point(position = 'jitter', color = "#46003d", alpha = 1/5) +
geom_smooth(method='lm', aes(group = 1), color = "cyan") +
xlab("Chlorides") +
ylab("pH")
cor(white[,2:12], white$pH)
ggplot(aes(x = residual.sugar, y = pH), data = white) +
geom_point(position = 'jitter', color = "#46003d", alpha = 1/5) +
geom_smooth(method='lm', aes(group = 1), color = "cyan") +
xlab("residual.sugar") +
ylab("pH")
ggplot(aes(x = residual.sugar, y = pH), data = white) +
geom_point(position = 'jitter', color = "#46003d", alpha = 1/5) +
geom_smooth(method='lm', aes(group = 1), color = "cyan") +
xlim(0, 25)
ggplot(aes(x = residual.sugar, y = pH, color = scale), data = white) +
geom_point(position = 'jitter') +
scale_color_brewer(type = 'div', guide = guide_legend(title = 'Quality')) +
geom_smooth(method = 'lm', color = 'purple') +
ggtitle('pH by Residual Sugar and Quality')
residual.sugar
ggplot(aes(x = pH, y = residual.sugar, color = scale), data = white) +
geom_point(position = 'jitter') +
scale_color_brewer(type = 'div', guide = guide_legend(title = 'Quality')) +
geom_smooth(method = 'lm', color = 'purple') +
ggtitle('pH by Residual Sugar and Quality')
residual.sugar
ggplot(aes(x = residual.sugar, y = pH, color = scale), data = white) +
geom_point(position = 'jitter') +
scale_color_brewer(type = 'div', guide = guide_legend(title = 'Quality')) +
geom_smooth(method = 'lm', color = 'purple') +
ggtitle('pH by Residual Sugar and Quality')
ggplot(aes(x = residual.sugar, y = pH, color = scale), data = white) +
geom_point(position = 'jitter') +
scale_color_brewer(type = 'div', guide = guide_legend(title = 'Quality')) +
geom_smooth(method = 'lm', color = 'purple') +
xlim(0, 25)
ggplot(aes(x = residual.sugar, y = pH, color = scale), data = white) +
geom_point(position = 'jitter') +
scale_color_brewer(type = 'div', guide = guide_legend(title = 'Quality')) +
geom_smooth(method = 'lm', color = 'purple') +
xlim(0, 20)
ggplot(aes(x = chlorides, y = pH), data = white) +
geom_point(position = 'jitter', color = "#46003d", alpha = 1/5) +
geom_smooth(method='lm', aes(group = 1), color = "cyan") +
xlab("Chlorides") +
ylab("pH")
ggplot(aes(x = chlorides, y = pH), data = white) +
geom_point(position = 'jitter', color = "#46003d", alpha = 1/5) +
geom_smooth(method='lm', aes(group = 1), color = "cyan") +
xlab("Citric Acid") +
ylab("pH")
ggplot(aes(x = citric.acid, y = pH), data = white) +
geom_point(position = 'jitter', color = "#46003d", alpha = 1/5) +
geom_smooth(method='lm', aes(group = 1), color = "cyan") +
xlab("Citric Acid") +
ylab("pH")
ggtitle('pH by Citric Acid and Quality')
ggplot(aes(x = citric.acid, y = pH, color = scale), data = white) +
geom_point(position = 'jitter') +
scale_color_brewer(type = 'div', guide = guide_legend(title = 'Quality')) +
geom_smooth(method = 'lm', color = 'purple') +
ggtitle('pH by Citric Acid and Quality')
ggplot(aes(x = residual.sugar, y = pH, color = scale), data = white) +
geom_point(position = 'jitter') +
scale_color_brewer(type = 'div', guide = guide_legend(title = 'Quality')) +
geom_smooth(method = 'lm', color = 'purple') +
xlim(0, 20) +
ggtitle('pH by Residual Sugar and Quality')
ggplot(aes(x = alcohol), data = white) +
geom_bar(fill = "#1ab385", binwidth = .05) +
geom_vline(xintercept = median(white$alcohol), color = "orange")
library(ggplot2)
library(GGally)
library(tidyr)
library(purrr)
library(gridExtra)
# Load the Data
white <- read.csv("winequality-white.csv", sep = ";")
ggplot(aes(x = alcohol), data = white) +
geom_bar(fill = "#1ab385", binwidth = .05) +
geom_vline(xintercept = median(white$alcohol), color = "orange")
summary(white)
str(white)
head(white)
cor(white[,2:12], white$quality)
white %>%
keep(is.numeric) %>%                     # Keep only numeric columns
gather() %>%                             # Convert to key-value pairs
ggplot(aes(value)) +                     # Plot the values
facet_wrap(~ key, scales = "free") +   # In separate panels
geom_density()                         # as density
ggplot(aes(factor(quality),
alcohol),
data = white) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab("Quality")
white$scale <- as.factor(white$quality)
ggplot(aes(factor(quality),
alcohol),
data = white) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab("Quality")
ggplot(data=white, aes(x = scale, y = chlorides)) +
geom_jitter( alpha = .3, color = "orange")  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
ylim(0, 0.1) +
xlab("Quality")
ggplot(aes(x = sulphates, y = pH), data = white) +
geom_point(position = 'jitter', color = "#46003d", alpha = 1/5) +
geom_smooth(method='lm', aes(group = 1), color = "cyan") +
xlab("Chlorides") +
ylab("pH")
ggplot(aes(x = density, y = alcohol), data = white) +
geom_point(position = 'jitter', color = "#46003d", alpha = 1/5) +
geom_smooth(method='lm', aes(group = 1), color = "cyan") +
xlab("Density") +
ylab("Alcohol")
ggplot(aes(x = density, y = alcohol), data = white) +
geom_point(position = 'jitter', color = "#46003d", alpha = 1/5) +
geom_smooth(method='lm', aes(group = 1), color = "cyan") +
xlim(0.987, 1.04) +
xlab("Density") +
ylab("Alcohol")
ggplot(aes(x = density, y = alcohol), data = white) +
geom_point(position = 'jitter', color = "#46003d", alpha = 1/5) +
geom_smooth(method='lm', aes(group = 1), color = "cyan") +
xlim(0.987, 1.004) +
xlab("Density") +
ylab("Alcohol")
# Load all of the packages that you end up using in your analysis in this code
# chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk. This
# prevents the code from displaying in the knitted HTML output. You should set
# echo=FALSE for all code chunks in your file, unless it makes sense for your
# report to show the code that generated a particular plot.
# The other parameters for "message" and "warning" should also be set to FALSE
# for other code chunks once you have verified that each plot comes out as you
# want it to. This will clean up the flow of your report.
library(ggplot2)
library(GGally)
library(tidyr)
library(purrr)
library(gridExtra)
# Load the Data
white <- read.csv("winequality-white.csv", sep = ";")
red <- read.csv("winequality-red.csv", sep = ";")
summary(white)
str(white)
head(white)
cor(white[,2:12], white$quality)
ggplot(aes(x = quality), data = white) +
geom_bar(fill = "#8989ff") +
geom_vline(xintercept = median(white$quality), color = "red")
ggplot(aes(x = alcohol), data = white) +
geom_bar(fill = "#1ab385", binwidth = .05) +
geom_vline(xintercept = median(white$alcohol), color = "orange")
white$scale <- as.factor(white$quality)
ggplot(aes(factor(quality),
alcohol),
data = white) +
geom_jitter( alpha = .3)  +
geom_boxplot( alpha = .5,color = 'blue')+
stat_summary(fun.y = "mean",
geom = "point",
color = "red",
shape = 8,
size = 4) +
xlab("Quality")
ggplot(aes(x = scale, y = alcohol), data = white) +
geom_point(position = 'jitter', color = "#46003d", alpha = 1/5) +
geom_smooth(method='lm', aes(group = 1), color = "cyan") +
xlab("Wine Quality") +
ylab("Alcohol")
cor(white$alcohol, white$quality)
#space
set.seed(1990)
ggpairs(white[sample.int(nrow(white), 1000), ]) ##TAKES SOME TIME DO RUN
cor(white$alcohol, white$density)
``` {r, corr_alcoholxdensity}
``` {r corr_alcoholxdensity}
``` {r }
``` {r echo=FALSE, message=FALSE, warning=FALSE, Alcohol_x_density}
``` {r warning=FALSE, cor_Alcohol_x_density}
# Load the Data
white <- read.csv("winequality-white.csv", sep = ";")
set.seed(1990)
ggpairs(white[sample.int(nrow(white), 1000), ]) ##TAKES SOME TIME DO RUN
``` {r warning=FALSE, cor_Alcohol_x_density}
cor(white$alcohol, white$density)
